!function(e,o){"use strict";function t(e){var o={},t=!1;return{open:function(){if(t)throw Error("Progress modal opened now");o=e.open({animation:!0,templateUrl:"app/widgets/proposalcreator/src/loadingModal.html",keyboard:!1,backdrop:"static"}),t=!0},close:function(){if(!t)throw Error("Progress modal is not active");o.close(),t=!1}}}angular.module("DevopsDashboard.widget.proposalcreator",["adf.provider","summernote","ui.select"]).config(["dashboardProvider",function(e){e.widget("proposalcreator",{title:"Proposal Creator",description:"Quickly build new proposals from historic proposal data",authorizedGroups:["root9b_all"],templateUrl:"app/widgets/proposalcreator/src/view.html",edit:{templateUrl:"app/widgets/proposalcreator/src/edit.html"},controller:"proposalCtrl"})}]).factory("loadingModal",t).controller("proposalCtrl",["$scope","$timeout","loadingModal",function(e,o,t){var n=io("/proposals"),l=!1,r="";n.on("error",function(e){console.error("Error:",e)}),n.on("sections",function(t){o(function(){e.sections=t})}),n.on("saved",function(){o(function(){e.savedMsg="Saved at "+Date().toLocaleString()})}),e.sections=[],e.proposalBody="",e.savedMsg="",e.searchString="",e.proposalTitles=[],e.proposalTitle={},e.search=function(){var t=e.searchString;t.length>1?n.emit("search",e.searchString):o(function(){e.sections=[]})},e.addSection=function(o){e.proposalBody+="<h2>"+e.sections[o].sign+"</h2>",e.proposalBody+=e.sections[o].text+"<br/><br/>"},e.options={height:300,focus:!0,airMode:!1,toolbar:[["edit",["undo","redo"]],["headline",["style"]],["style",["bold","italic","underline","superscript","subscript","strikethrough","clear"]],["fontface",["fontname"]],["textsize",["fontsize"]],["fontclr",["color"]],["alignment",["ul","ol","paragraph","lineheight"]],["height",["height"]],["table",["table"]],["insert",["link","picture","video","hr"]],["view",["fullscreen","codeview"]],["help",["help"]]]},e.init=function(){console.log("Summernote is launched")},e.enter=function(){console.log("Enter/Return key pressed")},e.focus=function(e){console.log("Editable area is focused")},e.blur=function(e){console.log("Editable area loses focus")},e.paste=function(e){console.log("Called event paste")},e.change=function(o){console.log("contents are changed:",o,e.editable),i()},e.keyup=function(e){console.log("Key is released:",e.keyCode)},e.keydown=function(e){console.log("Key is pressed:",e.keyCode)},e.imageUpload=function(o){console.log("image upload:",o),console.log("image upload's editable:",e.editable)};var i=function(){return e.proposalTitle.selected?void(l===!1&&(l=!0,o(function(){n.emit("save",{title:e.proposalTitle.selected,body:e.proposalBody}),l=!1},5e3))):(console.error("Proposal Title required"),void o(function(){i()},5e3))},s=function(o){t.open(),n.emit("getproposal",o,function(o){e.proposalBody=o.body,t.close()})};e.getProposalTitles=function(o){var t=e.proposalTitles.slice();return o&&t.indexOf(o)===-1&&t.unshift(o),t},e.titleSelected=function(e){r!=e&&s(e)},n.emit("gettitles",function(o){angular.copy(o,e.proposalTitles)})}]),t.$inject=["$uibModal"],angular.module("DevopsDashboard.widget.proposalcreator").run(["$templateCache",function(e){e.put("app/widgets/proposalcreator/src/edit.html",'<form role=form><div class=form-group><label for=sample>Sample</label> <input type=text class=form-control id=sample ng-model=config.sample placeholder="Enter sample"></div></form>'),e.put("app/widgets/proposalcreator/src/loadingModal.html",'<div class=modal-content><div class=modal-body><div class="center-block loader"></div></div></div><style>\n  .loader {\n    border: 16px solid #f3f3f3; /* Light grey */\n    border-top: 16px solid #3498db; /* Blue */\n    border-radius: 50%;\n    width: 120px;\n    height: 120px;\n    animation: spin 2s linear infinite;\n  }\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n</style>'),e.put("app/widgets/proposalcreator/src/view.html",'<div class=ng-cloak><h3>Working Proposal</h3><div class=form-group><ui-select ng-model=proposalTitle.selected on-select=titleSelected($item)><ui-select-match placeholder="Select or search for a Proposal title ...">{{$select.selected}}</ui-select-match><ui-select-choices repeat="title in getProposalTitles($select.search) | filter: $select.search"><div ng-bind=title></div></ui-select-choices></ui-select></div><div class=form-group><summernote config=options ng-model=proposalBody on-init=init() on-enter=enter() on-focus=focus(evt) on-blur=blur(evt) on-paste=paste() on-keyup=keyup(evt) on-keydown=keydown(evt) on-change=change(contents) on-image-upload=imageUpload(files)></summernote><span class=pull-right>{{ savedMsg }}</span><hr><h3>Proposal Search</h3><input type=text class=form-control ng-model=searchString placeholder=\'Search: e.g. "" or ""\' ng-change=search()><ul ng-repeat="section in sections"><li><div>{{ section.sign }}</div><div>{{ section.text }}</div></li><button ng-click=addSection($index)>Add Section</button></ul></div></div>')}])}(window);